.circleContainer {
    $particleNum: 200;
    // $particleColor: hsl(180, 100%, 80%);
    $particleColor: var(--chakra-colors-gray-800);
  
    position: absolute;
    bottom: 0;
    // transform: translateY(-10vh);
    animation-iteration-count: infinite;
    animation-timing-function: linear;
  
    .circle {
      width: 100%;
      height: 100%;
      border-radius: 0%;
      mix-blend-mode: screen;
      background-color: var(--chakra-colors-gray-800);
    //   background-image: radial-gradient(
    //     hsl(180, 100%, 80%),
    //     hsl(180, 100%, 80%) 10%,
    //     hsla(180, 100%, 80%, 0) 56%
    //   );
  
      animation: fadein-frames 200ms infinite, scale-frames 2s infinite;
  
      @keyframes fade-frames {
        0% {
          opacity: 1;
        }
  
        50% {
          opacity: 0.7;
        }
  
        100% {
          opacity: 1;
        }
      }
  
      @keyframes scale-frames {
        // 0% {
        //   transform: scale3d(0.4, 0.4, 1);
        // }
  
        // 50% {
        //   transform: scale3d(2.2, 2.2, 1);
        // }
  
        // 100% {
        //   transform: scale3d(0.4, 0.4, 1);
        // }
      }
    }
  
    $particleBaseSize: 20;
  
    @for $i from 1 through $particleNum {
        &:nth-child(#{$i}) {
          
            $circleSize: random($particleBaseSize);
            $startPositionY: random(10) + 100;
            @if $i > 80 {
                $circleSize: random(100) + 40;
                $startPositionY: random(10) + 20;
            }
            width: $circleSize + px;
            height: $circleSize + px;
    
            // $startPositionY: 0;
            $framesName: "move-frames-" + $i;
            $moveDuration: 28000 + random(9000) + ms;
    
            animation-name: "particle" + #{$framesName};
            animation-duration: $moveDuration;
            animation-delay: random(37000) + ms;

            z-index: random(2);
    
            @keyframes particle#{$framesName} {
            from {
                // transform: translate3d(random(100) + vw, 0, 0);
                transform: translate3d(random(100) + vw, 0, 0);
                opacity: 1;
            }
    
            to {
                transform: translate3d(random(100) + vw, -$startPositionY - random(20) + vh, 0);
                opacity: 0;
            }
            }
    
            .circle {
            animation-delay: random(4000) + ms;
            }
        }
    }
}

.bubbleContainer {
    $particleNum: 200;
    // $particleColor: hsl(180, 100%, 80%);
    $particleColor: white;
  
    position: absolute;
    bottom: 0;
    // transform: translateY(-10vh);
    animation-iteration-count: infinite;
    animation-timing-function: linear;
  
    .bubble {
      width: 100%;
      height: 100%;
      border-radius: 0%;
      mix-blend-mode: screen;
      background-color: $particleColor;
    //   background-image: radial-gradient(
    //     hsl(180, 100%, 80%),
    //     hsl(180, 100%, 80%) 10%,
    //     hsla(180, 100%, 80%, 0) 56%
    //   );
  
      animation: fadein-frames 200ms infinite, scale-frames 2s infinite;
  
    //   @keyframes fade-frames {
    //     0% {
    //       opacity: 1;
    //     }
  
    //     50% {
    //       opacity: 0.7;
    //     }
  
    //     100% {
    //       opacity: 1;
    //     }
    //   }
  
      @keyframes scale-frames {
        // 0% {
        //   transform: scale3d(0.4, 0.4, 1);
        // }
  
        // 50% {
        //   transform: scale3d(2.2, 2.2, 1);
        // }
  
        // 100% {
        //   transform: scale3d(0.4, 0.4, 1);
        // }
      }
    }
  
    $particleBaseSize: 20;
  
    @for $i from 1 through $particleNum {
        &:nth-child(#{$i}) {
          
            $circleSize: random($particleBaseSize);
            $startPositionY: random(10) + 100;
            @if $i > 80 {
                $circleSize: random(100) + 40;
            }
            width: $circleSize + px;
            height: $circleSize + px;
    
            // $startPositionY: 0;
            $framesName: "move-frames-" + $i;
            $moveDuration: 28000 + random(9000) + ms;
    
            animation-name: #{$framesName};
            animation-duration: $moveDuration;
            animation-delay: random(37000) + ms;

            z-index: random(2);
    
            @keyframes #{$framesName} {
            from {
                // transform: translate3d(random(100) + vw, 0, 0);
                transform: translate3d(random(100) + vw, 0, 0);
                opacity: 0;
            }
    
            to {
                transform: translate3d(random(100) + vw, -$startPositionY - random(20) + vh, 0);
                opacity: 1;
            }
            }
    
            .circle {
            animation-delay: random(4000) + ms;
            }
        }
    }
}